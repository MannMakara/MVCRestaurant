@model MvcCms.Models.Post

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" , @id="editor1"})
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                @*<textarea id="editor1" name="editor1">&lt;p&gt;Initial value.&lt;/p&gt;</textarea>*@
                <script type="text/javascript">
                    CKEDITOR.replace('editor1', {
                        filebrowserImageBrowseUrl: '/home/uploadPartial',
                        filebrowserImageUploadUrl: '/home/uploadnow'
                    });
                    function updateValue(id, value) {
                        // this gets called from the popup window and updates the field with a new value 
                        //document.getElementById(id).value = value;
                        var dialog = CKEDITOR.dialog.getCurrent();
                        if (dialog != null) {
                            dialog.setValueOf('info', 'txtUrl', value);
                        }
                        else {
                            document.getElementById('cke_Extend_textInput_ID').value = value;
                        }
                    }
                </script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, "TagEditor", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
